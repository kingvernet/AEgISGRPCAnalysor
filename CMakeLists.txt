#======================================================#
# cmake file for building SLCIOROOT / TRACEROOT
# @author K. VERNET, P. NEDELEC
# ******** September 2018 - December 2018 ********
CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
#======================================================#

# project name
project(AEgISGRPCAnalysor)
# project version
SET(AEgISGRPCAnalysor_VERSION_MAJOR 1)
SET(AEgISGRPCAnalysor_VERSION_MINOR 1)
SET(AEgISGRPCAnalysor_VERSION_PATCH 0)

MACRO(SET_OPTION option value)
  SET(${option} ${value} CACHE INTERNAL "" FORCE)
ENDMACRO()

# LCIO options
SET_OPTION(BUILD_LCIO_EXAMPLES  OFF)
SET_OPTION(BUILD_TESTING  OFF)
SET_OPTION(MARLIN_AIDA  OFF)
SET_OPTION(MARLIN_LCCD OFF)

set(PROJECT_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/build/include/")
set(LIBRARY_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/lib/")
#set(MARLINO_LIBRARY_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin/libMarlino/")
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")
SET(LCIO_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/build/include/")

SET_OPTION(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/bin")

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckCXXCompilerFlag)

IF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/bin/xml")
   MESSAGE("Folder are created yet")
ELSE()
   message("Copying analysis, data, xml folder ...")
   file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/src/analysis ${CMAKE_CURRENT_SOURCE_DIR}/src/data ${CMAKE_CURRENT_SOURCE_DIR}/src/xml DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/bin)
ENDIF()

FILE(COPY ${CMAKE_CURRENT_SOURCE_DIR}/src/LCIO/src/cpp/include/ DESTINATION ${PROJECT_INCLUDE_DIR})
FILE(COPY ${PROJECT_INCLUDE_DIR}/pre-generated/ DESTINATION ${PROJECT_INCLUDE_DIR})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/build/include/)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall -ansi -fno-strict-aliasing -lpthread -ldl -lm -fPIC" )

# Load Macro to locate ROOT and needed libraries
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/src/Modules/)
FIND_PACKAGE(ROOT REQUIRED)

INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS})
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ROOT_CXX_FLAGS}")

MESSAGE("ROOT :  ${ROOT_CXX_FLAGS}")
STRING(FIND "${ROOT_CXX_FLAGS}" "std=" Founded)
IF(${Founded} STREQUAL "-1")
	SET(ROOT_DEFINITIONS -std=c++11)
ENDIF()


#add_compile_options(${ROOT_DEFINITIONS})
ADD_COMPILE_OPTIONS(${ROOT_DEFINITIONS})


ADD_SUBDIRECTORY(src/LCIO)
ADD_SUBDIRECTORY(src/tinyxml)
ADD_SUBDIRECTORY(src/GRPCUtility)
ADD_SUBDIRECTORY(src/TRACEROOT)
ADD_SUBDIRECTORY(src/SLCIOROOT)
